{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, withKeys as _withKeys, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"login-container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"card-title\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    \"class\": \"login-card\"\n  }, {\n    header: _withCtx(function () {\n      return [_createElementVNode(\"h2\", _hoisted_2, _toDisplayString($setup.isLogin ? '登录' : '注册'), 1 /* TEXT */)];\n    }),\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_form, {\n        ref: \"formRef\",\n        model: $setup.form,\n        rules: $setup.rules,\n        \"label-width\": \"80px\",\n        onKeyup: _withKeys($setup.handleSubmit, [\"enter\"])\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_form_item, {\n            label: \"用户名\",\n            prop: \"username\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.form.username,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n                  return $setup.form.username = $event;\n                }),\n                placeholder: \"请输入用户名\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"密码\",\n            prop: \"password\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.form.password,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                  return $setup.form.password = $event;\n                }),\n                type: \"password\",\n                placeholder: \"请输入密码\",\n                \"show-password\": \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, null, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_button, {\n                type: \"primary\",\n                loading: $setup.loading,\n                onClick: $setup.handleSubmit\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createTextVNode(_toDisplayString($setup.isLogin ? '登录' : '注册'), 1 /* TEXT */)];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"loading\"]), _createVNode(_component_el_button, {\n                onClick: $setup.toggleMode\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createTextVNode(_toDisplayString($setup.isLogin ? '去注册' : '去登录'), 1 /* TEXT */)];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\"])];\n    }),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createVNode","_component_el_card","header","_withCtx","_createElementVNode","_hoisted_2","_toDisplayString","$setup","isLogin","_component_el_form","ref","model","form","rules","onKeyup","_withKeys","handleSubmit","_component_el_form_item","label","prop","_component_el_input","modelValue","username","_cache","$event","placeholder","_","password","type","_component_el_button","loading","onClick","_createTextVNode","toggleMode"],"sources":["/home/devbox/project/src/views/login/index.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <el-card class=\"login-card\">\n      <template #header>\n        <h2 class=\"card-title\">{{ isLogin ? '登录' : '注册' }}</h2>\n      </template>\n      \n      <el-form\n        ref=\"formRef\"\n        :model=\"form\"\n        :rules=\"rules\"\n        label-width=\"80px\"\n        @keyup.enter=\"handleSubmit\"\n      >\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input v-model=\"form.username\" placeholder=\"请输入用户名\" />\n        </el-form-item>\n        \n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input\n            v-model=\"form.password\"\n            type=\"password\"\n            placeholder=\"请输入密码\"\n            show-password\n          />\n        </el-form-item>\n\n        <el-form-item>\n          <el-button type=\"primary\" :loading=\"loading\" @click=\"handleSubmit\">\n            {{ isLogin ? '登录' : '注册' }}\n          </el-button>\n          <el-button @click=\"toggleMode\">\n            {{ isLogin ? '去注册' : '去登录' }}\n          </el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport { login, register } from '@/api/user';\n\nconst router = useRouter();\nconst formRef = ref(null);\nconst loading = ref(false);\nconst isLogin = ref(true);\n\nconst form = reactive({\n  username: '',\n  password: ''\n});\n\nconst rules = {\n  username: [\n    { required: true, message: '请输入用户名', trigger: 'blur' },\n    { min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur' }\n  ],\n  password: [\n    { required: true, message: '请输入密码', trigger: 'blur' },\n    { min: 6, max: 20, message: '长度在 6 到 20 个字符', trigger: 'blur' }\n  ]\n};\n\nconst handleSubmit = async () => {\n  if (!formRef.value) return;\n  \n  try {\n    await formRef.value.validate();\n    loading.value = true;\n    \n    const api = isLogin.value ? login : register;\n    const res = await api(form);\n    \n    if (isLogin.value) {\n      // 保存登录信息\n      localStorage.setItem('token', res.Data.token);\n      localStorage.setItem('username', form.username);\n      localStorage.setItem('userRole', res.Data.role);\n      \n      ElMessage.success('登录成功');\n      router.push('/');\n    } else {\n      ElMessage.success('注册成功');\n      isLogin.value = true;\n    }\n  } catch (error) {\n    console.error('提交失败:', error);\n  } finally {\n    loading.value = false;\n  }\n};\n\nconst toggleMode = () => {\n  isLogin.value = !isLogin.value;\n  form.username = '';\n  form.password = '';\n  if (formRef.value) {\n    formRef.value.clearValidate();\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.login-container {\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #f0f2f5;\n  \n  .login-card {\n    width: 400px;\n    \n    .card-title {\n      text-align: center;\n      margin: 0;\n    }\n  }\n}\n</style>\n"],"mappings":";;EACO,SAAM;AAAiB;;EAGlB,SAAM;AAAY;;;;;;;uBAH5BA,mBAAA,CAoCM,OApCNC,UAoCM,GAnCJC,YAAA,CAkCUC,kBAAA;IAlCD,SAAM;EAAY;IACdC,MAAM,EAAAC,QAAA,CACf;MAAA,OAAuD,CAAvDC,mBAAA,CAAuD,MAAvDC,UAAuD,EAAAC,gBAAA,CAA7BC,MAAA,CAAAC,OAAO,+B;;IAJzC,WAAAL,QAAA,CAOM;MAAA,OA4BU,CA5BVH,YAAA,CA4BUS,kBAAA;QA3BRC,GAAG,EAAC,SAAS;QACZC,KAAK,EAAEJ,MAAA,CAAAK,IAAI;QACXC,KAAK,EAAEN,MAAA,CAAAM,KAAK;QACb,aAAW,EAAC,MAAM;QACjBC,OAAK,EAZdC,SAAA,CAYsBR,MAAA,CAAAS,YAAY;;QAZlC,WAAAb,QAAA,CAcQ;UAAA,OAEe,CAFfH,YAAA,CAEeiB,uBAAA;YAFDC,KAAK,EAAC,KAAK;YAACC,IAAI,EAAC;;YAdvC,WAAAhB,QAAA,CAeU;cAAA,OAAyD,CAAzDH,YAAA,CAAyDoB,mBAAA;gBAfnEC,UAAA,EAe6Bd,MAAA,CAAAK,IAAI,CAACU,QAAQ;gBAf1C,uBAAAC,MAAA,QAAAA,MAAA,gBAAAC,MAAA;kBAAA,OAe6BjB,MAAA,CAAAK,IAAI,CAACU,QAAQ,GAAAE,MAAA;gBAAA;gBAAEC,WAAW,EAAC;;;YAfxDC,CAAA;cAkBQ1B,YAAA,CAOeiB,uBAAA;YAPDC,KAAK,EAAC,IAAI;YAACC,IAAI,EAAC;;YAlBtC,WAAAhB,QAAA,CAmBU;cAAA,OAKE,CALFH,YAAA,CAKEoB,mBAAA;gBAxBZC,UAAA,EAoBqBd,MAAA,CAAAK,IAAI,CAACe,QAAQ;gBApBlC,uBAAAJ,MAAA,QAAAA,MAAA,gBAAAC,MAAA;kBAAA,OAoBqBjB,MAAA,CAAAK,IAAI,CAACe,QAAQ,GAAAH,MAAA;gBAAA;gBACtBI,IAAI,EAAC,UAAU;gBACfH,WAAW,EAAC,OAAO;gBACnB,eAAa,EAAb;;;YAvBZC,CAAA;cA2BQ1B,YAAA,CAOeiB,uBAAA;YAlCvB,WAAAd,QAAA,CA4BU;cAAA,OAEY,CAFZH,YAAA,CAEY6B,oBAAA;gBAFDD,IAAI,EAAC,SAAS;gBAAEE,OAAO,EAAEvB,MAAA,CAAAuB,OAAO;gBAAGC,OAAK,EAAExB,MAAA,CAAAS;;gBA5B/D,WAAAb,QAAA,CA6BY;kBAAA,OAA2B,CA7BvC6B,gBAAA,CAAA1B,gBAAA,CA6BeC,MAAA,CAAAC,OAAO,+B;;gBA7BtBkB,CAAA;8CA+BU1B,YAAA,CAEY6B,oBAAA;gBAFAE,OAAK,EAAExB,MAAA,CAAA0B;cAAU;gBA/BvC,WAAA9B,QAAA,CAgCY;kBAAA,OAA6B,CAhCzC6B,gBAAA,CAAA1B,gBAAA,CAgCeC,MAAA,CAAAC,OAAO,iC;;gBAhCtBkB,CAAA;;;YAAAA,CAAA;;;QAAAA,CAAA;;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}