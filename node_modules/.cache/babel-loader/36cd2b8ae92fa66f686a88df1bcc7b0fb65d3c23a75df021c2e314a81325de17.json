{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\nimport router from '@/router';\nvar service = axios.create({\n  baseURL: 'http://localhost:3000/api',\n  timeout: 15000\n});\n\n// 请求拦截器\nservice.interceptors.request.use(function (config) {\n  var token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = \"Bearer \".concat(token);\n  }\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nservice.interceptors.response.use(function (response) {\n  // 如果是二进制数据，直接返回\n  if (response.config.responseType === 'blob') {\n    return response.data;\n  }\n  var res = response.data;\n  if (!res.Success) {\n    ElMessage.error(res.Msg || '请求失败');\n    return Promise.reject(new Error(res.Msg || '请求失败'));\n  }\n  return res;\n}, function (error) {\n  var _error$response$data;\n  if (error.response) {\n    switch (error.response.status) {\n      case 401:\n        ElMessage.error('请重新登录');\n        localStorage.removeItem('token');\n        router.push('/login');\n        break;\n      case 403:\n        ElMessage.error('没有权限');\n        break;\n      default:\n        ElMessage.error(((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.Msg) || '请求失败');\n    }\n  } else {\n    ElMessage.error('网络错误');\n  }\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","ElMessage","router","service","create","baseURL","timeout","interceptors","request","use","config","token","localStorage","getItem","headers","concat","error","Promise","reject","response","responseType","data","res","Success","Msg","Error","_error$response$data","status","removeItem","push"],"sources":["/home/devbox/project/src/utils/request.js"],"sourcesContent":["import axios from 'axios';\nimport { ElMessage } from 'element-plus';\nimport router from '@/router';\n\nconst service = axios.create({\n  baseURL: 'http://localhost:3000/api',\n  timeout: 15000\n});\n\n// 请求拦截器\nservice.interceptors.request.use(\n  config => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\n// 响应拦截器\nservice.interceptors.response.use(\n  response => {\n    // 如果是二进制数据，直接返回\n    if (response.config.responseType === 'blob') {\n      return response.data;\n    }\n\n    const res = response.data;\n    if (!res.Success) {\n      ElMessage.error(res.Msg || '请求失败');\n      return Promise.reject(new Error(res.Msg || '请求失败'));\n    }\n    return res;\n  },\n  error => {\n    if (error.response) {\n      switch (error.response.status) {\n        case 401:\n          ElMessage.error('请重新登录');\n          localStorage.removeItem('token');\n          router.push('/login');\n          break;\n        case 403:\n          ElMessage.error('没有权限');\n          break;\n        default:\n          ElMessage.error(error.response.data?.Msg || '请求失败');\n      }\n    } else {\n      ElMessage.error('网络错误');\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default service; "],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,MAAM,MAAM,UAAU;AAE7B,IAAMC,OAAO,GAAGH,KAAK,CAACI,MAAM,CAAC;EAC3BC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAH,OAAO,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9B,UAAAC,MAAM,EAAI;EACR,IAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,aAAAC,MAAA,CAAaJ,KAAK,CAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACD,UAAAM,KAAK,EAAI;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAb,OAAO,CAACI,YAAY,CAACY,QAAQ,CAACV,GAAG,CAC/B,UAAAU,QAAQ,EAAI;EACV;EACA,IAAIA,QAAQ,CAACT,MAAM,CAACU,YAAY,KAAK,MAAM,EAAE;IAC3C,OAAOD,QAAQ,CAACE,IAAI;EACtB;EAEA,IAAMC,GAAG,GAAGH,QAAQ,CAACE,IAAI;EACzB,IAAI,CAACC,GAAG,CAACC,OAAO,EAAE;IAChBtB,SAAS,CAACe,KAAK,CAACM,GAAG,CAACE,GAAG,IAAI,MAAM,CAAC;IAClC,OAAOP,OAAO,CAACC,MAAM,CAAC,IAAIO,KAAK,CAACH,GAAG,CAACE,GAAG,IAAI,MAAM,CAAC,CAAC;EACrD;EACA,OAAOF,GAAG;AACZ,CAAC,EACD,UAAAN,KAAK,EAAI;EAAA,IAAAU,oBAAA;EACP,IAAIV,KAAK,CAACG,QAAQ,EAAE;IAClB,QAAQH,KAAK,CAACG,QAAQ,CAACQ,MAAM;MAC3B,KAAK,GAAG;QACN1B,SAAS,CAACe,KAAK,CAAC,OAAO,CAAC;QACxBJ,YAAY,CAACgB,UAAU,CAAC,OAAO,CAAC;QAChC1B,MAAM,CAAC2B,IAAI,CAAC,QAAQ,CAAC;QACrB;MACF,KAAK,GAAG;QACN5B,SAAS,CAACe,KAAK,CAAC,MAAM,CAAC;QACvB;MACF;QACEf,SAAS,CAACe,KAAK,CAAC,EAAAU,oBAAA,GAAAV,KAAK,CAACG,QAAQ,CAACE,IAAI,cAAAK,oBAAA,uBAAnBA,oBAAA,CAAqBF,GAAG,KAAI,MAAM,CAAC;IACvD;EACF,CAAC,MAAM;IACLvB,SAAS,CAACe,KAAK,CAAC,MAAM,CAAC;EACzB;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeb,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}